generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String     @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           String     @default("renter")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  properties     Property[]
  ratings        Rating[]
  @@map("users")
}

model Property {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  location    Json
  features    Json
  amenities   String[]
  images      String[]
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id])
  @@map("properties")
}

model Rating {
  id         String   @id @default(cuid())
  rating     Int
  comment    String?
  fromUserId String
  toUserId   String
  createdAt  DateTime @default(now())
  fromUser   User     @relation(fields: [toUserId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Waitlist {
  id        String   @id @default(cuid())
  email     String   @unique
  userType  String   @db.VarChar(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("waitlist")
} 